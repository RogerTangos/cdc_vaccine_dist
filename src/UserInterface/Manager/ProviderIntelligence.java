/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddPerson.java
 *
 * Created on Nov 15, 2011, 6:42:05 PM
 */
package UserInterface.Manager;

import Business.IndyPackage.Invoice;
import Business.IndyPackage.UserAccount;
import Business.IndyPackage.Vaccine;
import Business.IndyPackage.WorkRequest;
import Business.Providers.Inventory;
import Business.Providers.Provider;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Albert Carter
 */
public class ProviderIntelligence extends javax.swing.JPanel {

    UserAccount ua;
    Provider p;
    JPanel userProcessContainer;
    WorkRequest WR;
    Vaccine v;
    Integer quantityOrdered;
    Integer quantityOnHand;

    /** Creates new form AddPerson */
    public ProviderIntelligence(javax.swing.JPanel jp, Provider p, UserAccount ua) {
        initComponents();
        this.p = p;
        userProcessContainer = jp;
        this.ua = ua;

        jLabel1.setText(p.getOrgName() + " " + p.getClass().getSimpleName() + " | Business Intelligence");
        

        
        
        
        
        refresh();
    }

    void refresh() {
        int rowcount = managejTable.getRowCount();
        int i;
        for (i = rowcount - 1; i >= 0; i--) {
            ((DefaultTableModel) managejTable.getModel()).removeRow(i);
        }
        ArrayList<Vaccine> clist = p.getPhd().getCdc().getSystem().getVaccineCatalog().getVaccineList();
        for (Vaccine c : clist) {
            Object[] col = new Object[3];
            col[0] = c;
            col[1] = c.getDisease();
            col[2] = c.getLifespan();


            ((DefaultTableModel) managejTable.getModel()).addRow(col);
        }
    }

    public Integer findVaccinesInInventory() {
        Map map = (Map) p.getWorkRequestList(); //cast the HashMap to map
        Set set = map.entrySet(); //and get the entry set
        Iterator iter = set.iterator(); //get the number of entries
        quantityOrdered = 0;
        quantityOnHand = 0;
        Integer nonSelectedQuantity = 0;
        while (iter.hasNext()) {


            Map.Entry entry = (Map.Entry) iter.next();
            ArrayList<WorkRequest> entryRequests = (ArrayList<WorkRequest>) entry.getValue();

            for (WorkRequest c : entryRequests) {
                Inventory inventory = c.getInventory();
                 
                if (c.getInvoice() != null && v == inventory.getVaccine()) {
                    quantityOrdered = quantityOrdered + inventory.getCount();
                    quantityOnHand = quantityOnHand + (inventory.getCount() - inventory.getNumberAdministered());
                }
                
                if(c.getInvoice() != null && v!= inventory.getVaccine())
                    nonSelectedQuantity = nonSelectedQuantity + inventory.getCount();
                
            }
        }
        return nonSelectedQuantity;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        refreshjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        managejTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        namejLabel = new javax.swing.JLabel();
        unitPricejLabel = new javax.swing.JLabel();
        unitPHDjLabel = new javax.swing.JLabel();
        unitCDCjLabel = new javax.swing.JLabel();
        UnitProviderjLabel = new javax.swing.JLabel();
        diseasejLabel = new javax.swing.JLabel();
        lifespanjLabel = new javax.swing.JLabel();
        numOrderedjLabel = new javax.swing.JLabel();
        numInStockjLabel = new javax.swing.JLabel();
        costjLabel = new javax.swing.JLabel();
        percentInventoryjLabel = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("jLabel1");

        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        managejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Vaccine Name", "Disease", "Lifespan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        managejTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managejTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(managejTable);

        jLabel2.setText("Select a Vaccine:");

        namejLabel.setText("Vaccine Name:");

        unitPricejLabel.setText("Unit Price (total):");

        unitPHDjLabel.setText("Unit Price (PHD):");

        unitCDCjLabel.setText("UnitPrice (CDC):");

        UnitProviderjLabel.setText("Unit Price (Provider):");

        diseasejLabel.setText("Associated Disease:");

        lifespanjLabel.setText("Vaccine Lifespan (days):");

        numOrderedjLabel.setText("Total # Ordered:");

        numInStockjLabel.setText("Total in Inventory:");

        costjLabel.setText("Total Cost to Provider:");

        percentInventoryjLabel.setText("% Inventory of Vaccine:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(refreshjButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 502, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namejLabel)
                                    .addComponent(diseasejLabel)
                                    .addComponent(percentInventoryjLabel))
                                .addGap(124, 124, 124)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unitPricejLabel)
                                    .addComponent(unitCDCjLabel)
                                    .addComponent(unitPHDjLabel)
                                    .addComponent(UnitProviderjLabel)))
                            .addComponent(lifespanjLabel))
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costjLabel)
                            .addComponent(numInStockjLabel)
                            .addComponent(numOrderedjLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namejLabel)
                    .addComponent(unitPricejLabel)
                    .addComponent(numOrderedjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diseasejLabel)
                    .addComponent(unitCDCjLabel)
                    .addComponent(numInStockjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lifespanjLabel)
                    .addComponent(unitPHDjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnitProviderjLabel)
                    .addComponent(costjLabel)
                    .addComponent(percentInventoryjLabel))
                .addGap(18, 18, 18)
                .addComponent(backjButton)
                .addGap(194, 194, 194))
        );
    }// </editor-fold>//GEN-END:initComponents

private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
// TODO add your handling code here:
    refresh();
}//GEN-LAST:event_refreshjButtonActionPerformed

private void managejTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managejTableMouseClicked
// TODO add your handling code here:
    int selectedRow = managejTable.getSelectedRow();
    if (selectedRow < 0 || selectedRow > managejTable.getRowCount()) {
        return;
    }

    v = (Vaccine) managejTable.getValueAt(selectedRow, 0);
    Integer nonSelectedQuantity = findVaccinesInInventory();//finds the quantityOrdered of vaccines that do not match the selected
    
    Double percentInventoryOfVaccine = 0.0;
    if(nonSelectedQuantity != 0){
       percentInventoryOfVaccine = (double) (quantityOrdered/(quantityOrdered+nonSelectedQuantity));
    }else{
        percentInventoryOfVaccine = 100.00;
    }
    

    namejLabel.setText("Vaccin Name: " + v.getName());
    diseasejLabel.setText("Associated Disease: " + v.getDisease().getName());
    lifespanjLabel.setText("Vaccine Lifespan (days): " + Long.toString(v.getLifespan()));
    
    percentInventoryjLabel.setText("% Inventory of Vaccine: " + Double.toString(percentInventoryOfVaccine)+"%");
            
    unitPricejLabel.setText("Unit Price (total): $" + v.getPrice());
    unitCDCjLabel.setText("Unit Price (CDC): $" + (v.getCdcPercent() * v.getPrice() * .01));
    unitPHDjLabel.setText("Unit Price (PHD): $" + (v.getPrice() * v.getPhdPercent() * .01));
    UnitProviderjLabel.setText("Unit Price (Provider): $" + (v.getPrice() * v.getProviderPercent() * .01));
    numOrderedjLabel.setText("Total # Ordered: " + Integer.toString(quantityOrdered));
    numInStockjLabel.setText("Total in Inventory: " + Integer.toString(quantityOnHand));
    costjLabel.setText("Total Cost to Provider: $" + Double.toString((double) quantityOrdered*v.getPrice()*v.getProviderPercent()*.01));

    



}//GEN-LAST:event_managejTableMouseClicked

private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
// TODO add your handling code here:
    userProcessContainer.remove(this);
    CardLayout c3 = (CardLayout) userProcessContainer.getLayout();
    c3.previous(userProcessContainer);
}//GEN-LAST:event_backjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UnitProviderjLabel;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel costjLabel;
    private javax.swing.JLabel diseasejLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lifespanjLabel;
    private javax.swing.JTable managejTable;
    private javax.swing.JLabel namejLabel;
    private javax.swing.JLabel numInStockjLabel;
    private javax.swing.JLabel numOrderedjLabel;
    private javax.swing.JLabel percentInventoryjLabel;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JLabel unitCDCjLabel;
    private javax.swing.JLabel unitPHDjLabel;
    private javax.swing.JLabel unitPricejLabel;
    // End of variables declaration//GEN-END:variables
}
