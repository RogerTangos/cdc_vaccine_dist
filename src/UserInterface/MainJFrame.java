/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainJFrame.java
 *
 * Created on Oct 12, 2011, 9:44:51 PM
 */
package UserInterface;

import UserInterface.Admin.ClinicAdmin;
import Business.Business.Business;
import Business.Business.ConfigureABusiness;
import Business.Enterprise.CDC;
import Business.Enterprise.Distributor;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Manufacturer;
import Business.Enterprise.Network;
import Business.Enterprise.PHD;
import Business.IndyPackage.UserAccount;
import Business.Providers.Clinic;
import Business.Providers.Hospital;
import Business.Providers.Pharmacy;
import Business.Roles.AdminRole;
import Business.Roles.Manager;
import UserInterface.Admin.CDCAdmin;
import UserInterface.Admin.DistributorAdmin;
import UserInterface.Admin.HospitalAdmin;
import UserInterface.Admin.PHDAdmin;
import UserInterface.CDC.ManageCDC;
import UserInterface.Distributor.ManageDistributor;
import UserInterface.Manager.ManagePHD;
import UserInterface.Manager.ManageProvider;
import Business.Enterprise.ProgramSystem;
import Business.Roles.PayableRole;
import Business.Roles.ReceivableRole;
import Business.Roles.TreasuryRole;
import Business.Roles.WarehouseRole;
import UserInterface.Admin.ManufacturerAdmin;
import UserInterface.Distributor.ShipDistributorRequests;
import UserInterface.Manufacturer.ManageManufacturer;
import UserInterface.NetworkAdmin.NetworkAdmin;
import UserInterface.Payable.SeeAccountsPayable;
import UserInterface.Payable.SeeAccountsReceivable;
import UserInterface.Payable.TreasuryPaysAccounts;
import dbo4.Db4oUtil;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Albert Carter
 */
public class MainJFrame extends javax.swing.JFrame {

    Business business;
    ConfigureABusiness config;

    /** Creates new form MainJFrame */
    public MainJFrame() {
        initComponents();
        business = Db4oUtil.getBusiness(); //this will do the ConfigureABusiness.Initialize("initialization") stuff.

        networkjComboBox.removeAllItems();

        for (Network n : business.getSystem().getNetwork().getNetworkList()) {
            networkjComboBox.addItem(n);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernamejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordjPasswordField = new javax.swing.JPasswordField();
        loginjButton = new javax.swing.JButton();
        logoutjButton = new javax.swing.JButton();
        networkjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        UserProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(150);

        jLabel1.setText("UserName:");

        usernamejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernamejTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Password:");

        loginjButton.setText("Login");
        loginjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginjButtonActionPerformed(evt);
            }
        });

        logoutjButton.setText("Logout");
        logoutjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutjButtonActionPerformed(evt);
            }
        });

        networkjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkjComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Network:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(usernamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(passwordjPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(loginjButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logoutjButton, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(networkjComboBox, 0, 119, Short.MAX_VALUE)))
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networkjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutjButton)
                .addGap(216, 216, 216))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        UserProcessContainer.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(UserProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void usernamejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernamejTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_usernamejTextFieldActionPerformed

private void loginjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginjButtonActionPerformed
//// TODO add your handling code here:
    String username = usernamejTextField.getText();
    String password = passwordjPasswordField.getText();

    UserAccount ua = null;

//    ProgramSystem system = business.getSystem();
    
    Network n = (Network) networkjComboBox.getSelectedItem();
    
    //for(Network n : system.getNetworkCatalog().getNetworkList()){
        
        for(Enterprise e: n.getEnterpriseList()){
            if(e.getUserAccountDirectory().isValid(username, password)!=null){
                ua = e.getUserAccountDirectory().isValid(username, password);
            }
        }
    //}
    
    if (ua == null) {
        JOptionPane.showMessageDialog(null, "Login information is incorrect.");
        return;
    }

    Enterprise enterprise = ua.getEnterprise();

    if (ua.getRole() instanceof AdminRole) {
        if (ua.getEnterprise() instanceof Clinic) { //instanceof is an operator
            ClinicAdmin awa = new ClinicAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin Clinic", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof Hospital) { //instanceof is an operator
            HospitalAdmin awa = new HospitalAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin Hospital", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof Pharmacy) { //instanceof is an operator
            ClinicAdmin awa = new ClinicAdmin(UserProcessContainer, enterprise);//Pharmacy and Clinic are functionally the same at the admin level
            //so use the same jPanel
            UserProcessContainer.add("Admin Pharmacy", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof Distributor) { //instanceof is an operator
            DistributorAdmin awa = new DistributorAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin Distributor", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof PHD) { //instanceof is an operator
            PHDAdmin awa = new PHDAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin PHD", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof CDC) { //instanceof is an operator
            CDCAdmin awa = new CDCAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin CDC", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof Manufacturer) { //instanceof is an operator
            ManufacturerAdmin awa = new ManufacturerAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin Manufacturer", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
        if (ua.getEnterprise() instanceof Network){
            NetworkAdmin awa = new NetworkAdmin(UserProcessContainer, enterprise);
            UserProcessContainer.add("Admin Network", awa);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
        }
    }
        
        if(ua.getRole() instanceof Manager){
            if(ua.getEnterprise() instanceof Pharmacy){
            ManageProvider wsj = new ManageProvider(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage Pharmacy", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof Hospital){
            ManageProvider wsj = new ManageProvider(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage Hospital", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof Clinic){
            ManageProvider wsj = new ManageProvider(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage Clinic", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof PHD){
            ManagePHD wsj = new ManagePHD(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage PHD", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof Distributor){
            ManageDistributor wsj = new ManageDistributor(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("You know", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof CDC){
            ManageCDC wsj = new ManageCDC(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage CDC", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            if(ua.getEnterprise() instanceof Manufacturer){
            ManageManufacturer wsj = new ManageManufacturer(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Manage Manufacturer", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
        }
            
        try{
        if(ua.getRole() instanceof WarehouseRole){
            if(ua.getOrganization()!=null){
            ShipDistributorRequests wsj = new ShipDistributorRequests(UserProcessContainer, enterprise, ua.getOrganization(), ua);
            UserProcessContainer.add("Ship Distributor Requests", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            else{JOptionPane.showMessageDialog(null, "This user has no assigned organization");
            
            }
        }
        if(ua.getRole() instanceof PayableRole){
            if(ua.getOrganization()!=null){
            SeeAccountsPayable wsj = new SeeAccountsPayable(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("See Accounts Payable", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            else{
               JOptionPane.showMessageDialog(null, "This user has no assigned organization"); 
            }
        }
        if(ua.getRole() instanceof TreasuryRole){
            if(ua.getOrganization()!=null){
            TreasuryPaysAccounts wsj = new TreasuryPaysAccounts(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Treasury Pays Accounts", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            else{
                JOptionPane.showMessageDialog(null, "This user has no assigned organization");
            }
        }
        if(ua.getRole() instanceof ReceivableRole){
            if(ua.getOrganization()!=null){
            SeeAccountsReceivable wsj = new SeeAccountsReceivable(UserProcessContainer, enterprise, ua);
            UserProcessContainer.add("Receivable Verifies Accounts", wsj);
            CardLayout c1 = (CardLayout) UserProcessContainer.getLayout();
            c1.next(UserProcessContainer);
            return;
            }
            else{
                JOptionPane.showMessageDialog(null, "This user has no assigned organization");
            }
        }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "The user's organization is misassigned. Please contact you r enterprise admin");
        }

//    
//    if(ua.getRole().getRoleName().equalsIgnoreCase("Admin")){
//        if(ua.getEnterprise().equals)        
//        
//        
//                  AdminWorkArea awa = new AdminWorkArea(business, UserProcessContainer);
//                  UserProcessContainer.add("AdminWorkAreaJPanel",awa);
//                  CardLayout c1 = (CardLayout)UserProcessContainer.getLayout();
//                  c1.next(UserProcessContainer);                
//    



}//GEN-LAST:event_loginjButtonActionPerformed

private void logoutjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutjButtonActionPerformed
// TODO add your handling code here:
    Db4oUtil.storeObject(business);
    UserProcessContainer.removeAll();
}//GEN-LAST:event_logoutjButtonActionPerformed

private void networkjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkjComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_networkjComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel UserProcessContainer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton loginjButton;
    private javax.swing.JButton logoutjButton;
    private javax.swing.JComboBox networkjComboBox;
    private javax.swing.JPasswordField passwordjPasswordField;
    private javax.swing.JTextField usernamejTextField;
    // End of variables declaration//GEN-END:variables
}
